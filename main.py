import telebot
from telebot.types import ReplyKeyboardRemove
import sqlite3
from keyboard import get_sector_keyboard, get_main_keyboard, get_admin_markup

TOKEN = "7630583007:AAGvDmu3Be00Gcn0TI7_KAmbX8d3nMYInHQ"
bot = telebot.TeleBot(TOKEN)

ADMIN_ID = -1002343745365

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect("requests.db", check_same_thread=False)
cursor = conn.cursor()

cursor.execute("""
CREATE TABLE IF NOT EXISTS requests (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    username TEXT,
    sector TEXT,
    comment TEXT,
    status TEXT DEFAULT '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ'
)
""")
conn.commit()


@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
        reply_markup=get_main_keyboard()
    )


@bot.message_handler(func=lambda message: message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
def request_info(message):
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∫—Ç–æ—Ä –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö:",
        reply_markup=get_sector_keyboard()
    )
    bot.register_next_step_handler(message, get_sector)


def get_sector(message):
    sector = message.text
    bot.send_message(
        message.chat.id,
        "–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:",
        reply_markup=ReplyKeyboardRemove()
    )
    bot.register_next_step_handler(message, get_comment, sector)


def get_comment(message, sector):
    comment = message.text
    user_id = message.from_user.id
    username = message.from_user.username

    cursor.execute("""
        INSERT INTO requests (user_id, username, sector, comment)
        VALUES (?, ?, ?, ?)
    """, (user_id, username, sector, comment))
    conn.commit()

    request_id = cursor.lastrowid

    full_message = (
        f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{request_id}!\n\n"
        f"üìç –°–µ–∫—Ç–æ—Ä: {sector}\n"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username if username else '–ë–µ–∑ –∏–º–µ–Ω–∏'}"
    )
    bot.send_message(ADMIN_ID, full_message, reply_markup=get_admin_markup(request_id))

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id,
                     "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –°–ø–∞—Å–∏–±–æ!",
                     reply_markup=get_main_keyboard())


@bot.callback_query_handler(func=lambda call: call.data.startswith("resolve_"))
def resolve_request(call):
    request_id = int(call.data.split("_")[1])

    cursor.execute("""
        UPDATE requests
        SET status = '–†–µ—à–µ–Ω–∞'
        WHERE id = ?
    """, (request_id,))
    conn.commit()

    bot.answer_callback_query(call.id, "–ó–∞—è–≤–∫–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ —Ä–µ—à—ë–Ω–Ω–∞—è.")
    bot.edit_message_text(
        f"–ó–∞—è–≤–∫–∞ #{request_id} –±—ã–ª–∞ —Ä–µ—à–µ–Ω–∞.",
        chat_id=call.message.chat.id,
        message_id=call.message.message_id
    )

    cursor.execute("SELECT user_id FROM requests WHERE id = ?", (request_id,))
    user_id = cursor.fetchone()[0]
    bot.send_message(user_id, f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ #{request_id} –±—ã–ª–∞ —Ä–µ—à–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ!")


@bot.message_handler(commands=['history'])
def show_history(message):
    if message.chat.id == ADMIN_ID:
        cursor.execute("SELECT id, sector, comment, status FROM requests")
        requests = cursor.fetchall()

        if requests:
            history = "\n".join([
                f"#{req[0]} | –°–µ–∫—Ç–æ—Ä: {req[1]} | –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {req[2]} | –°—Ç–∞—Ç—É—Å: {req[3]}"
                for req in requests
            ])
            bot.send_message(ADMIN_ID, f"–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫:\n\n{history}")
        else:
            bot.send_message(ADMIN_ID, "–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫ –ø—É—Å—Ç–∞.")
    else:
        bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")


bot.polling()
